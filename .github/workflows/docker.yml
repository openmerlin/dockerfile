name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'releases/**'
    paths:
      - '.github/actions/clean-up/action.yml'
      - '.github/actions/docker-login/action.yml'
      - '.github/workflows/_docker-build.yml'
      - '.github/workflows/docker.yml'
      - 'cann/**'
      - 'python/**'
      - 'pytorch/**'
      - 'mindspore/**'
      - 'arg.json'
      - 'docker-bake.hcl'
      - '!**/*.md'
  pull_request:
    branches:
      - 'main'
      - 'releases/**'
    types:
      - 'synchronize'
      - 'labeled'
    paths:
      - '.github/actions/list-labels/action.yml'
      - '.github/actions/clean-up/action.yml'
      - '.github/actions/docker-login/action.yml'
      - '.github/workflows/_docker-build.yml'
      - '.github/workflows/docker.yml'
      - 'cann/**'
      - 'python/**'
      - 'pytorch/**'
      - 'mindspore/**'
      - 'arg.json'
      - 'docker-bake.hcl'
      - '!**/*.md'
  release:
    types:
      - 'published'

# Only cancel the previous runs when triggered by a pull request
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  pull-requests: read
  contents: read
  packages: write

jobs:
  prepare:
    name: prepare
    runs-on: linux-x64-azure
    outputs:
      pr-labels: ${{ steps.list-labels.outputs.labels }}
      targets: ${{ steps.list-targets.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Lists all labels for your pull request
      - name: List labels
        id: list-labels
        if: ${{ github.event_name == 'pull_request' }}
        uses: ./.github/actions/list-labels
        with:
          issue-number: ${{ github.event.pull_request.number }}

      # Lists all targets defined in arg.json
      - name: List targets
        id: list-targets
        run: |
          targets=$(jq -r 'to_entries | map(select(.value != [])) | map(.key) | join(",")' arg.json)
          echo "targets=${targets}" >> $GITHUB_OUTPUT
          echo "targets: ${targets}"

  python:
    name: python
    needs:
      - prepare
    if: |
      !cancelled() &&
      contains(needs.prepare.outputs.targets, 'python') &&
      (
       (github.event_name != 'pull_request') ||
       (github.event_name == 'pull_request' && contains(needs.prepare.outputs.pr-labels, 'python'))
      )
    uses: ./.github/workflows/_docker-build.yml
    with:
      target: 'python'
      push: ${{ github.event_name == 'release' }}
      clean-up: false
      set: |
        *.cache-from=type=gha
        *.cache-to=type=gha,mode=min
    secrets: inherit

  cann:
    name: cann
    needs:
      - prepare
      - python
    if: |
      !cancelled() &&
      contains(needs.prepare.outputs.targets, 'cann') &&
      (needs.python.result == 'success' || needs.python.result == 'skipped') &&
      (
       (github.event_name != 'pull_request') ||
       (github.event_name == 'pull_request' && contains(needs.prepare.outputs.pr-labels, 'cann'))
      )
    uses: ./.github/workflows/_docker-build.yml
    with:
      target: 'cann'
      push: ${{ github.event_name == 'release' }}
      clean-up: false
    secrets: inherit

  pytorch:
    name: pytorch
    needs:
      - prepare
      - cann
    if: |
      !cancelled() &&
      contains(needs.prepare.outputs.targets, 'pytorch') &&
      (needs.cann.result == 'success' || needs.cann.result == 'skipped') &&
      (
       (github.event_name != 'pull_request') ||
       (github.event_name == 'pull_request' && contains(needs.prepare.outputs.pr-labels, 'pytorch'))
      )
    uses: ./.github/workflows/_docker-build.yml
    with:
      target: 'pytorch'
      push: ${{ github.event_name == 'release' }}
      clean-up: false
    secrets: inherit

  mindspore:
    name: mindspore
    needs:
      - prepare
      - cann
    if: |
      !cancelled() &&
      contains(needs.prepare.outputs.targets, 'mindspore') &&
      (needs.cann.result == 'success' || needs.cann.result == 'skipped') &&
      (
       (github.event_name != 'pull_request') ||
       (github.event_name == 'pull_request' && contains(needs.prepare.outputs.pr-labels, 'mindspore'))
      )
    uses: ./.github/workflows/_docker-build.yml
    with:
      target: 'mindspore'
      push: ${{ github.event_name == 'release' }}
      clean-up: false
    secrets: inherit
