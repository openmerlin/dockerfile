name: "docker-build"

on:
  workflow_call:
    inputs:
      target:
        description: "Bake target"
        required: true
        type: string
      set:
        description: "List of targets values to override (eg. targetpattern.key=value)"
        required: false
        type: string
      push:
        description: "Push is a shorthand for --set=*.output=type=registry"
        required: false
        type: boolean
        default: false
      clean-up:
        description: "Whether to clean up"
        required: false
        type: boolean
        default: true
      upload-metadata:
        description: "Whether to upload metadata files"
        required: false
        type: boolean
        default: true
      hw-registry:
        description: "Server address of Huawei Cloud registry"
        required: false
        type: string
        default: "swr.cn-southwest-2.myhuaweicloud.com"
      ascendhub-registry:
        description: "Server address of AscendHub registry"
        required: false
        type: string 
        default: "swr.cn-east-3.myhuaweicloud.com"
    secrets:
      DOCKERHUB_OWNER:
        description: "Owner of the DockerHub registry"
        required: false
      DOCKERHUB_USERNAME:
        description: "Username of the DockerHub registry"
        required: false
      DOCKERHUB_TOKEN:
        description: "Token of the DockerHub registry"
        required: false
      QUAY_OWNER:
        description: "Owner of the Quay registry"
        required: false
      QUAY_USERNAME:
        description: "Username of the Quay registry"
        required: false
      QUAY_TOKEN:
        description: "Token of the Quay registry"
        required: false
      HW_OWNER:
        description: "Owner of the Huawei Cloud registry"
        required: false
      HW_USERNAME:
        description: "Username of the Huawei Cloud registry"
        required: false
      HW_TOKEN:
        description: "Token of the Huawei Cloud registry"
        required: false
      ASCENDHUB_OWNER:
        description: "Owner of the AscendHub registry"
        required: false
      ASCENDHUB_USERNAME:
        description: "Username of the AscendHub registry"
        required: false
      ASCENDHUB_TOKEN:
        description: "Token of the AscendHub registry"
        required: false

permissions:
  contents: read

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.list-target.outputs.targets }}
      asendhub_registry_url: ${{ steps.read-arg.outputs.asendhub_registry_url }}
      other_registry_urls: ${{ steps.read-arg.outputs.other_registry_urls }}
      allowed_tag: ${{ steps.read-arg.outputs.allowed_tags }}
      intersection_tags: ${{ steps.intersection-tag.outputs.intersection_tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List targets
        id: list-target
        uses: docker/bake-action/subaction/list-targets@v6
        with:
          target: ${{ inputs.target }}
          files: |
            arg.json
            docker-bake.hcl

      - name: Read and parse arg.json
        id: read-arg
        run: |
          asendhub_registry_url = $(jq -r '.registry[] | select(has("allowed_tags") | not) | .url' input.json | jq -R -s -c 'split("\n") | map(select(. != ""))')
          other_registry_urls = $(jq -r '.registry[] | select(has("allowed_tags")) | .url' input.json | jq -R -s -c 'split("\n") | map(select(. != ""))')
          allowed_tags=$(jq -r '.registry[] | select(.url == "swr.cn-east-3.myhuaweicloud.com") | .allowed_tags[]?' arg.json | jq -R -s -c 'split("\n") | map(select(. != ""))')
          
          echo "asendhub_registry_url=${asendhub_registry_url}" >> $GITHUB_OUTPUT
          echo "other_registry_urls=${other_registry_urls}" >> $GITHUB_OUTPUT
          echo "allowed_tags=${allowed_tags}" >> $GITHUB_OUTPUT

      - name: Calculate intersection of tags and allowed_tags
        id: intersection-tag
        run: |
          metadata_tags=$(echo '${{ steps.metadata.outputs.tags }}' | jq -R -s -c 'split(",")')
          allowed_tags='${{ needs.prepare.outputs.allowed_tags }}'
          intersection=$(echo "$metadata_tags" | jq --argjson allowed_tags "$allowed_tags" '
            map(select(. as $tag | $allowed_tags | index($tag) != null)
          ')
          echo "intersection_tags=${intersection_tags}" >> $GITHUB_OUTPUT

  docker:
    name: build ${{ matrix.target }}
    runs-on: ubuntu-24.04-arm # TODO: Use ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clean up
        if: ${{ inputs.clean-up }}
        continue-on-error: true
        uses: ./.github/actions/clean-up

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registries
        if: ${{ inputs.push }}
        uses: ./.github/actions/docker-login
        with:
          dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
          quay-username: ${{ secrets.QUAY_USERNAME }}
          quay-token: ${{ secrets.QUAY_TOKEN }}
          hw-username: ${{ secrets.HW_USERNAME }}
          hw-token: ${{ secrets.HW_TOKEN }}
          hw-registry: ${{ inputs.hw-registry }}
          ascendhub-username: ${{ secrets.ASCENDHUB_USERNAME }}
          ascendhub-token: ${{ secrets.ASCENDHUB_TOKEN }}
          ascendhub-registry: ${{ inputs.ascendhub-registry }}

      - name: Extract metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          bake-target: "docker-metadata-action"

      - name: Build Docker image
        id: bake
        uses: docker/bake-action@v6
        with:
          source: .
          files: |
            ${{ github.workspace }}/arg.json
            ${{ github.workspace }}/docker-bake.hcl
            ${{ steps.metadata.outputs.bake-file-labels }}
            ${{ steps.metadata.outputs.bake-file-annotations }}
          targets: ${{ matrix.target }}
          set: ${{ inputs.set }}
          provenance: false
          sbom: false

      - name: Push images to AscendHub
        if: ${{ contains(fromJson(steps.metadata.outputs.tags), fromJson(needs.prepare.outputs.allowed_tags)) }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ fromJson(steps.metadata.outputs.intersection_tags) }}
          registry: ${{ fromJson(needs.prepare.outputs.ascendhub_url) }}

      - name: Push images to other registries
        if: ${{ inputs.push }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ fromJson(steps.metadata.outputs.tags) }}
          registries: ${{ fromJson(needs.prepare.outputs.other_registry_urls) }}
            
      - name: Export metadata
        id: export
        if: ${{ steps.bake.outputs.metadata }}
        shell: bash
        run: |
          METADATA_FILE_NAME="${{ matrix.target }}-metadata.json"
          echo "metadata-file-name=${METADATA_FILE_NAME}" >> $GITHUB_OUTPUT
          echo '${{ steps.bake.outputs.metadata }}' > /tmp/${METADATA_FILE_NAME}

      - name: Upload metadata
        id: upload-artifact
        if: ${{ inputs.upload-metadata }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.export.outputs.metadata-file-name }}
          path: /tmp/${{ steps.export.outputs.metadata-file-name }}
          if-no-files-found: error
          retention-days: 7

      - name: Show space
        if: ${{ always() }}
        shell: bash
        run: |
          set -x
          sudo df -h
          docker images -a
